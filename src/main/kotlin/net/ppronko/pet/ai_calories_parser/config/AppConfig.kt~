package net.ppronko.pet.ai_calories_parser.config

import jakarta.ws.rs.core.MediaType
import org.apache.http.HttpHeaders
import org.springframework.beans.factory.annotation.Value
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
import org.springframework.http.client.reactive.ReactorClientHttpConnector
import org.springframework.web.client.RestTemplate
import org.springframework.web.reactive.function.client.WebClient
import org.telegram.telegrambots.meta.TelegramBotsApi
import org.telegram.telegrambots.meta.generics.TelegramBot
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession
import reactor.netty.http.client.HttpClient
import java.time.Duration

@Configuration
class AppConfig {
    @Bean
    fun restTemplate(): RestTemplate {
        return RestTemplate()
    }

    @Bean("geminiWebClient")
    fun geminiWebClient(
        builder: WebClient.Builder,
        @Value("\${gemini.api.timeout}") timeout: Long
    ): WebClient {
        val httpClient = HttpClient.newConnection()
            .responseTimeout(Duration.ofSeconds(timeout));

        return builder
            .clientConnector(ReactorClientHttpConnector(httpClient))
            .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON)
            .build()
    }

    @Bean
    fun telegramBotsApi(telegramBot: TelegramBot): TelegramBotsApi {
        val api = TelegramBotsApi(DefaultBotSession::class.java)
        api.registerBot(telegramBot)
        return api
    }
}